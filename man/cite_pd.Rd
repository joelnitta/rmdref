% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cite_pd.R
\name{cite_pd}
\alias{cite_pd}
\title{Cite a reference using pandoc}
\usage{
cite_pd(ref, bib, csl, format = "plain", glue = TRUE, del_after = NULL)
}
\arguments{
\item{ref}{Character vector of length 1; a character string including
the reference to cite, in pandoc MD format. See examples.}

\item{bib}{Character vector; path to bibliography file(s) in \code{bib} or \code{yaml}
format.}

\item{csl}{Character vector of length 1; path to CSL file.}

\item{format}{Character vector of length 1; pandoc output format. Must be
a valid output format for the pandoc \code{-t} argument. For a complete list,
see https://pandoc.org/MANUAL.html#general-options}

\item{glue}{Logical vector of length 1; should the output be passed through
\code{\link[glue:glue]{glue::glue()}}?}

\item{del_after}{Character vector of length 1; string to mark place where
text will be deleted from that point to the end of the citation.}
}
\value{
Character vector.
}
\description{
Unlike the normal use of pandoc to render \code{Rmd} to an output format, this
just returns a single formatted reference.
}
\details{
This function can be used to generate pandoc-formatted references in formats
that normally don't support pandoc, such as slides with xaringan or
CSV files.

Note that since pandoc isn't seeing a full (R)md file, it won't
automatically disambiguate references (cases where an 'a', 'b', etc needs
to be added to differentiate between publications because the author and
year are the same). You can use the \code{del_after} argument as a work-around
(see Examples).
}
\examples{
# Specify example bibliography file (yaml format)
my_bib <- system.file(
  "extdata", "refs.yaml", package = "rmdref", mustWork = TRUE)

# Download a CSL file to a temporary location
temp_csl <- tempfile(fileext = ".csl")
utils::download.file(
  "https://raw.githubusercontent.com/citation-style-language/styles/master/ecology.csl",
  temp_csl
)

# Cite the reference
cite_pd("@Nitta2011a", my_bib, temp_csl)

# The first argument can be any string that may include one or more
# references in pandoc format
cite_pd(
  "I agree with @Nitta2021 because they are right [@Nitta2011b].",
  my_bib, temp_csl)

# Use `del_after` as a work-around for disambiguating references.
# e.g., if you want to print "Nitta 2011a":
cite_pd("@Nitta2011a|@Nitta2011b", my_bib, temp_csl, del_after = "|")

# Delete the temporary file
unlink(temp_csl)

}
